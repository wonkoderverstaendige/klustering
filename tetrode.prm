experiment_name = ''
prb_file = 'tetrode.prb'

traces = dict(
    raw_data_files=[experiment_name + '.dat'],
    voltage_gain=0.195,
    sample_rate=30000,
    n_channels=4,
    dtype='int16',
)

spikedetekt = {
    'filter_low': 500.,
    'filter_high_factor': 0.95 * .5,  # will be multiplied by the sample rate
    'filter_butter_order': 3,

    # Data chunks.
    'chunk_size_seconds': 1.,
    'chunk_overlap_seconds': .015,

    # Threshold.
    'n_excerpts': 50,
    'excerpt_size_seconds': 20., # allow for more averaging in finding thresholds
    'use_single_threshold': False,
    'threshold_strong_std_factor': 4.5,
    'threshold_weak_std_factor': 0., # to include all channels in the mask
    'detect_spikes': 'negative',
    'binary_masks': True, # ADDED parameter, make masks all 0 or 1s. The joint effect of these parameter values should to 
                          # have all masks values at 1, which is likely desirable for tetrodes. 

    # Connected components.
    'connected_component_join_size': 1,

    # Spike extractions.
    'extract_s_before': 12,
    'extract_s_after': 20,
    'weight_power': 2,

    # Features.
    'n_features_per_channel': 3,
    'pca_n_waveforms_max': 10000,

}

klustakwik2 = dict(
    num_starting_clusters=100,
)
